id,title,url,description,tags,difficulty,likes,dislikes,totalSubmission,totalAccepted,similarQuestions,dis_tags
1,Two Sum,https://leetcode.com/problems/two-sum,"Given an array of integers numsÂ and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.","['array', 'hash-table']",Easy,20569,723,8870677,4151322,"[""3Sum"", ""4Sum"", ""Two Sum II - Input array is sorted"", ""Two Sum III - Data structure design"", ""Subarray Sum Equals K"", ""Two Sum IV - Input is a BST"", ""Two Sum Less Than K"", ""Max Number of K-Sum Pairs"", ""Count Good Meals""]","[('python', 163), ('java', 129), ('hashmap', 115), ('cpp', 98), ('javascript', 93), ('c++', 91), ('python 3', 87), ('two-sum', 59), ('python3', 49), ('solution', 43), ('two sum', 40), ('java-solution', 37), ('map', 34), ('hash table', 32), ('golang', 29), ('array', 28), ('c', 28), ('c#', 27), ('hashtable', 27), ('rust', 22), ('run-time-error', 21), ('swift', 21), ('twosum', 21), ('wrong-answer', 20), ('cpp solution', 19), ('javascript solution', 19), ('time-limit-exceeded', 19), ('dictionary', 18), ('ruby', 18), ('easy', 17), ('time-complexity', 17), ('youtube', 16), ('amazon', 15), ('easy-understanding', 15), ('facebook', 14), ('hashset', 14), ('two sum cpp', 14), ('2sum', 13), ('improve', 13), ('list', 13), ('brute force', 12), ('easy-undestand', 12), ('go', 12), ('microsoft', 12), ('accepted', 11), ('scala', 11), ('works-on-my-machine', 11), ('binary-search', 10), ('c++ code', 10), ('test-case', 10), ('kotlin', 9), ('testcase-wrong', 9), ('unorderedmap', 9), ('video explanation', 9), ('video-explanation', 9), ('fast and simple', 8), ('golang-solution', 8), ('simple', 8), ('stl', 8), ('cpp easy', 7), ('dictonary', 7), ('go-solution', 7), ('two sum python', 7), ('unordered map', 7), ('c code', 6), ('clean code', 6), ('error', 6), ('hash', 6), ('hashing', 6), ('js javascript', 6), ('linear time', 6), ('python3.8', 6), ('two-pointers', 6), ('typescript', 6), ('wrong', 6), ('csharp', 5), ('easiest', 5), ('efficient', 5), ('fast-solution', 5), ('functional', 5), ('hashing algorithm', 5), ('js', 5), ('php', 5), ('python2', 5), ('short', 5), ('simple solution', 5), ('video', 5), ('binary-tree', 4), ('cpp-solution', 4), ('easy-understand', 4), ('javascript brute force', 4), ('nlogn', 4), ('runtime', 4), ('runtime-error', 4), ('uthash', 4), ('video solution', 4), ('#two-sum', 3), ('2 pointer approach', 3), ('algorithm', 3), ('binary search', 3), ('brute-force', 3), ('c# problems', 3), ('c# solutions', 3), ('c++ hash', 3), ('clarification', 3), ('commented', 3), ('compiler', 3), ('complexity', 3), ('dict', 3), ('dictionaries', 3), ('doubts', 3), ('easy-to-understand', 3), ('failed', 3), ('fast', 3), ('functional-programming', 3), ('hash map', 3), ('help', 3), ('java ac solution', 3), ('linear', 3), ('linear-time', 3), ('loop', 3), ('one pass solution', 3), ('optimal', 3), ('set', 3), ('solved', 3), ('sort', 3), ('sorted', 3), ('two pointers', 3), ('vector', 3), ('video explaination', 3), ('#array', 2), ('#easy-understand', 2), ('#hashmap', 2), ('#python', 2), ('#python 3', 2), ('#two sum', 2), ('accepted solution', 2), ('arrays', 2), ('beginners', 2), ('brute force to optimal', 2), ('bug report', 2), ('c-solution', 2), ('c++ solution', 2), ('c++11', 2), ('code', 2), ('comments-added', 2), ('concise-solution', 2), ('detailed explanation', 2), ('dictionary c#', 2), ('easy code', 2), ('easy to understand', 2), ('easytounderstand', 2), ('efficient solution', 2), ('enumerate', 2), ('es6', 2), ('fastest', 2), ('for-loop', 2), ('google', 2), ('hash-table', 2), ('help me', 2), ('index', 2), ('iterator', 2), ('java 8', 2), ('javacript', 2), ('leetcode', 2), ('map-stl', 2), ('n', 2), ('naivesolution', 2), ('nlogn time', 2), ('one pass hash map', 2), ('one-pass', 2), ('output-limit-exceeded', 2), ('performance', 2), ('php solution', 2), ('pointers', 2), ('question-not-clear', 2), ('recursive', 2), ('simple c code', 2), ('solution-ruby', 2), ('solution-sharing-cpp', 2), ('solution-sharing-python', 2), ('sorting', 2), ('space-complexity', 2), ('straight-forward', 2), ('sum of two integers', 2), ('swiftsolution', 2), ('syntax', 2), ('tejas dalvi', 2), ('test', 2), ('tow sum', 2), ('two sum c', 2), ('two sum javascript', 2), ('twosums', 2), ('video link', 2), ('wrong answer', 2), ('#c', 1), ('#cpp', 1), ('#csharp', 1), ('#dictionary', 1), ('#dsa', 1), ('#easy', 1), ('#java', 1), ('#java8', 1), ('#javascript', 1), ('#lessspace', 1), ('#problem #c solution #bug', 1), ('#readable', 1), ('#singleiteration', 1), ('#sum', 1), ('#twosum', 1), ('0ms', 1), ('0ms-4ms', 1), ('0ms-solution', 1), ('1-line', 1), ('10 lines', 1), ('100 faster', 1), ('100 faster runtime', 1), ('100 space', 1), ('100 speed', 1), ('2 lines', 1), ('2 pointers', 1), ('4 liner', 1), ('90+', 1), ('90+ solution', 1), ('90+faster', 1), ('abap', 1), ('algo', 1), ('algorithm-explained', 1), ('algorithms', 1), ('algosexplained', 1), ('alibaba', 1), ('amazon intern', 1), ('amazon interview', 1), ('amazon sde', 1), ('analysis', 1), ('answers-not-saved', 1), ('array two sum', 1), ('arraylist', 1), ('attractor', 1), ('backtracking', 1), ('bad', 1), ('baidu', 1), ('basic', 1), ('basics', 1), ('beating-100-submission', 1), ('beats 98', 1), ('beats 98 pc', 1), ('beats 99', 1), ('begineer', 1), ('beginner', 1), ('beginner friendly', 1), ('beginnerfriendly', 1), ('best cpp solution', 1), ('best explaination', 1), ('best java solution', 1), ('best solution', 1), ('best space complexity', 1), ('best-solution-ever', 1), ('best-submission', 1), ('bfs', 1), ('bisection search', 1), ('bitset', 1), ('boost', 1), ('bottoms-up', 1), ('break', 1), ('buffer-overflow', 1), ('bug', 1), ('bug-timeout', 1), ('c language', 1), ('c programming', 1), ('c# solution', 1), ('c#-solution', 1), ('c++17', 1), ('case', 1), ('clean', 1), ('codedecks', 1), ('coding comic', 1), ('compile-error', 1), ('compose', 1), ('computational-complexity', 1), ('computer sciences', 1), ('concise', 1), ('correct-test', 1), ('cplusplus', 1), ('cpp doubt', 1), ('csh', 1), ('curry', 1), ('db2', 1), ('description-disambiguation', 1), ('detailed', 1), ('dichotomy', 1), ('different approach', 1), ('disappearance', 1), ('dll', 1), ('doubleloopimplementation', 1), ('dynamic programming', 1), ('easy undestanding', 1), ('easy-solition', 1), ('easy-understsand', 1), ('email', 1), ('exhaustive-search', 1), ('explaination', 1), ('explanation', 1), ('facebook-interview', 1), ('faster', 1), ('faster than 90', 1), ('fastest solution', 1), ('feedback', 1), ('file', 1), ('follow-up', 1), ('fp', 1), ('full detailed explanation', 1), ('functional programming', 1), ('general', 1), ('generic-solution', 1), ('ghetto hack', 1), ('github', 1), ('google interview', 1), ('google-phone-interview', 1), ('hangouts', 1), ('hash-function', 1), ('hashmaps', 1), ('hasmap', 1), ('head', 1), ('heap', 1), ('heap-buffer-overflow', 1), ('heap-overflow', 1), ('help needed', 1), ('helpful comments', 1), ('hide locked problems', 1), ('illustrated', 1), ('immutable', 1), ('import', 1), ('incorrect solution', 1), ('indices', 1), ('input', 1), ('input-error', 1), ('intuitive', 1), ('iteration', 1), ('iterative', 1), ('java solution', 1), ('java11', 1), ('javasciprt', 1), ('javascrip', 1), ('javascript object', 1), ('javascript recursive', 1), ('javascript two sum', 1), ('javascriptes6', 1), ('kotlin-solution', 1), ('last', 1), ('leetcode 394', 1), ('leetcode-only', 1), ('less memory', 1), ('linear space', 1), ('linear-space', 1), ('linear-time-space', 1), ('lists', 1), ('logn', 1), ('loops', 1), ('low memory', 1), ('malj', 1), ('memory', 1), ('memory-limit-exceeded', 1), ('memory-limited-exceeded', 1), ('merge-sort', 1), ('mergesort', 1), ('microsoft azure', 1), ('minimalism', 1), ('mock', 1), ('most optimal', 1), ('multimap', 1), ('murod turaev', 1), ('must-read', 1), ('mysql', 1), ('naive-solution', 1), ('nested loops', 1), ('new-language', 1), ('newbie', 1), ('nutanix', 1), ('o1 time', 1), ('object', 1), ('objective-c', 1), ('objects', 1), ('offerpie', 1), ('offers', 1), ('oj-function-error', 1), ('on', 1), ('one loop', 1), ('one pass', 1), ('one-liner', 1), ('onepass', 1), ('online-judge', 1), ('online-judge-question', 1), ('optimal approach', 1), ('optimized', 1), ('pair sum', 1), ('pairs', 1), ('palindrome', 1), ('pending', 1), ('problem', 1), ('programming', 1), ('pyhton3', 1), ('pythonic', 1), ('pythonpython3', 1), ('pythonsolution', 1), ('qucik-sort', 1), ('racket', 1), ('radix-sort', 1), ('rajawatbanna', 1), ('recursion', 1), ('reduce', 1), ('return-value', 1), ('reverse-polish-notation', 1), ('roman to integer', 1), ('roman-integer', 1), ('romantointeger', 1), ('rune-time-error', 1), ('self explanatory', 1), ('server', 1), ('set intersection', 1), ('shortest', 1), ('simple clear c++ solution', 1), ('simple python solution', 1), ('simple-solution', 1), ('single pass', 1), ('sliding-window', 1), ('slidingwindow', 1), ('solition-sharing', 1), ('solution-javascript', 1), ('solution-python', 1), ('solution-sharing-c', 1), ('solution-sharing-swift', 1), ('solution-sharingjava', 1), ('sorted dictionary', 1), ('soultion-sharing-swift', 1), ('space o1', 1), ('space-compexity', 1), ('speed', 1), ('sql', 1), ('status', 1), ('stdmap', 1), ('stdvector', 1), ('stochastic', 1), ('submit', 1), ('sum', 1), ('summary-ranges', 1), ('swift5', 1), ('target', 1), ('target-sum', 1), ('tencent', 1), ('test case issue', 1), ('test-case-validation', 1), ('test-cases', 1), ('testcase', 1), ('testcase error', 1), ('testcase-wrong-and-not', 1), ('thank you', 1), ('time complexity', 1), ('time-limit-exceeded-java', 1), ('traversal', 1), ('tree', 1), ('tutorial for beginners', 1), ('two pointer', 1), ('two solutions', 1), ('two sum video solution', 1), ('two-different-solutions', 1), ('two-pass', 1), ('two-pointer', 1), ('two0sum', 1), ('typeerror', 1), ('ugly', 1), ('ultra simple', 1), ('undefined', 1), ('unique', 1), ('unit', 1), ('unordered maps', 1), ('unorderedmultipmap', 1), ('upvote', 1), ('using array', 1), ('valid', 1), ('valid-parentheses', 1), ('vectors', 1), ('verification', 1), ('version', 1), ('walkthrough', 1), ('whiteboard', 1), ('whiteboard explanation', 1), ('with-explanation', 1), ('withnotes', 1), ('without map', 1), ('word-ladder', 1), ('wrong output', 1), ('wrong-answer-ruby', 1), ('xinerd', 1)]"
1801,Number of Orders in the Backlog,https://leetcode.com/problems/number-of-orders-in-the-backlog,"You are given a 2D integer array orders, where each orders[i] = [pricei, amounti, orderTypei] denotes that amounti orders have been placed of type orderTypei at the price pricei. The orderTypei is:


	0 if it is a batch of buy orders, or
	1 if it is a batch of sell orders.


Note that orders[i] represents a batch of amounti independent orders with the same price and order type. All orders represented by orders[i] will be placed before all orders represented by orders[i+1] for all valid i.

There is a backlog that consists of orders that have not been executed. The backlog is initially empty. When an order is placed, the following happens:


	If the order is a buy order, you look at the sell order with the smallest price in the backlog. If that sell order's price is smaller than or equal to the current buy order's price, they will match and be executed, and that sell order will be removed from the backlog. Else, the buy order is added to the backlog.
	Vice versa, if the order is a sell order, you look at the buy order with the largest price in the backlog. If that buy order's price is larger than or equal to the current sell order's price, they will match and be executed, and that buy order will be removed from the backlog. Else, the sell order is added to the backlog.


Return the total amount of orders in the backlog after placing all the orders from the input. Since this number can be large, return it modulo 109 + 7.","['heap', 'greedy']",Medium,89,122,13566,5935,[],"[('priority queue', 14), ('heap', 10), ('c++', 9), ('java', 7), ('python', 6), ('python3', 5), ('treemap', 5), ('heapq', 3), ('priority-queue', 3), ('c#', 2), ('easy', 2), ('javascript', 2), ('binary-search', 1), ('clean code', 1), ('comments-added', 1), ('cpp', 1), ('dictionary', 1), ('feedback', 1), ('go', 1), ('golang', 1), ('heaps', 1), ('java-solution', 1), ('leetcode', 1), ('map', 1), ('ordered map', 1), ('priorityqueue', 1), ('python 3', 1), ('ruby', 1), ('rust', 1), ('simple', 1), ('sortedlist', 1), ('swift', 1), ('tree map', 1)]"
456,132 Pattern,https://leetcode.com/problems/132-pattern,"Given an arrayÂ of n integers nums, a 132 pattern is a subsequence of three integers nums[i], nums[j] and nums[k] such that i < j < k and nums[i] < nums[k] < nums[j].

Return true if there is a 132 pattern in nums, otherwise, return false.

Follow up: The O(n^2) is trivial, could you come up with the O(n logn) or the O(n) solution?",['stack'],Medium,2258,142,283323,87116,[],"[('java', 16), ('stack', 14), ('c++', 11), ('stacks', 8), ('javascript', 7), ('easy-understanding', 6), ('python', 6), ('java-solution', 5), ('python 3', 5), ('cpp', 4), ('cpp solution', 4), ('explained', 4), ('python3', 4), ('kotlin', 3), ('132 pattern', 2), ('binary-search-tree', 2), ('brute force', 2), ('c++ solution', 2), ('interval', 2), ('sets', 2), ('#easy-understand', 1), ('123 sequence', 1), ('132-pattern', 1), ('ac solution', 1), ('accepted', 1), ('algorithms', 1), ('beginner friendly', 1), ('binary search', 1), ('binary search tree', 1), ('brute force to optimal', 1), ('c#', 1), ('c++ monotonic stack', 1), ('dp', 1), ('easy', 1), ('easy to understand', 1), ('easy understanding', 1), ('explaination', 1), ('explained solution', 1), ('fast', 1), ('golang', 1), ('greedy', 1), ('greedy approach', 1), ('interval-merging', 1), ('intervals', 1), ('linear time', 1), ('monotonic-stack', 1), ('next-greater-element', 1), ('nlogn', 1), ('one pass', 1), ('pattern', 1), ('pattern matching', 1), ('ruby', 1), ('set', 1), ('simple', 1), ('simple clear c++ solution', 1), ('simple-solution', 1), ('slidingwindow', 1), ('solution', 1), ('stack vs. array', 1), ('stack-based', 1), ('sweepline', 1), ('thought-process', 1), ('treeset', 1), ('twopointer', 1), ('video explaination', 1), ('video solution', 1), ('video-explanation', 1), ('well-explained', 1), ('zea7ot', 1)]"
782,Transform to Chessboard,https://leetcode.com/problems/transform-to-chessboard,"An N x N board contains only 0s and 1s. In each move, you can swap any 2 rows with each other, or any 2 columns with each other.

What is the minimum number of moves to transform the board into a ""chessboard"" - a board where no 0s and no 1s are 4-directionally adjacent? If the task is impossible, return -1.","['array', 'math']",Hard,151,156,14185,6673,[],"[('bit-manipulation', 1), ('c#', 1), ('java', 1)]"
